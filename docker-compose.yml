services:
  server:
    build:
      context: .
      dockerfile: ./apps/server/Dockerfile
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; ./main'
    develop:
      watch:
        - action: rebuild
          path: "./apps/shared"
          target: /app/main
        - action: rebuild
          path: "./apps/server"
          target: /app/main
    ports:
      - "8080:8080"
    depends_on:
      - db
    tty: true # for colorized log output
    environment:
      - DATABASE_URL=postgres://postgres:password@db:5432/postgres?sslmode=disable

  runner:
    build:
      context: .
      dockerfile: ./apps/runner/Dockerfile

    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; ./main'
    develop:
      watch:
        - action: rebuild
          path: "./shared"
          target: /app/main
        - action: rebuild
          path: "./runner"
          target: /app/main
    depends_on:
      - db
    tty: true # for colorized log output
    environment:
      - DATABASE_URL=postgres://postgres:password@db:5432/postgres?sslmode=disable

  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    command: npm run start
    develop:
      watch:
        - action: sync+restart
          path: "./web"
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./web/package.json
    tty: true # for colorized log output
    ports:
      - "3000:3000"
  db:
    image: postgres:16.0-bookworm
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    # volumes:
    #   - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
# volumes:
#   db-data:
